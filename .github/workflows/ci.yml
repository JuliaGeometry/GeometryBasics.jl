name: CI
on:
  push:
    branches:
      - master
    tags: "*"
  pull_request:
    branches:
      - master
defaults:
  run:
    shell: bash
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'  # lowest declared `julia` compat in `Project.toml`
          - '1'
        os: [ubuntu-latest, macOS-latest, windows-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Test GeometryBasicsCore
        run: |
          julia --color=yes --project=@. -e '
            using Pkg
            Pkg.develop(PackageSpec(path=joinpath(pwd(), "GeometryBasicsCore")))
            Pkg.test("GeometryBasicsCore")
          '
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@latest
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    env:
      JULIA_PKG_SERVER: ""
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=joinpath(pwd(), "GeometryBasicsCore")))
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
          '
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
